(function (d3, topojson) {
  'use strict';

  var d3__default = 'default' in d3 ? d3['default'] : d3;
  topojson = topojson && Object.prototype.hasOwnProperty.call(topojson, 'default') ? topojson['default'] : topojson;

  function nlData () {
    return fetch('https://cartomap.github.io/nl/wgs84/gemeente_2020.topojson')
      .then((res) => res.json())
      .then((data) => {
        return data;
      });
  }

  const dummydata = {
    latitude: '52.0039482',
    longitude: '4.4426398'
  };

  console.log(dummydata.latitude);

  nlData().then((data) => {
    const path = d3__default.geoPath();
    const zoom = d3__default.zoom().scaleExtent([1, 8]).on('zoom', zoomed);
    
    const width = 975;
  	const height = 610;

  	const svg = d3__default.select("svg")
        .attr("viewBox", [0, 0, width, height])
        .on("click", reset);
  	
    
    const g = svg.append('g');

    const projection = d3__default.geoMercator().scale(6000).center([5.116667, 52.17]);
    const pathGenerator = path.projection(projection);

   const gemeentes = g
      .append('g')
      .attr('fill', '#444')
      .attr('cursor', 'pointer')
      .selectAll('path')
      .data(topojson.feature(data, data.objects.gemeente_2020).features)
      .join('path')
      .on('click', clicked)
      .attr('d', path);



    gemeentes.append('g')
    	.attr('transform', ({ longitude, latitude }) => `translate(${projection([longitude, latitude]).join(",")})`)
    	.append('circle')
    	.attr('r', 2);
    
    console.log(gemeentes);

    svg.call(zoom);

    function reset() {
      gemeentes.transition().style('fill', null);
      svg
        .transition()
        .duration(750)
        .call(
          zoom.transform,
          d3__default.zoomIdentity,
          d3__default.zoomTransform(svg.node()).invert([width / 2, height / 2])
        );
    }

    function clicked(event, d) {
      const [[x0, y0], [x1, y1]] = path.bounds(d);
      event.stopPropagation();
      gemeentes.transition().style('fill', null);
      d3__default.select(this).transition().style('fill', 'red');
      svg
        .transition()
        .duration(750)
        .call(
          zoom.transform,
          d3__default.zoomIdentity
            .translate(width / 2, height / 2)
            .scale(
              Math.min(8, 0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height))
            )
            .translate(-(x0 + x1) / 2, -(y0 + y1) / 2),
          d3__default.pointer(event, svg.node())
        );
    }

    function zoomed(event) {
      const { transform } = event;
      g.attr('transform', transform);
      g.attr('stroke-width', 1 / transform.k);
    }
  });

}(d3, topojson));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5sdG9wby5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzb24gfSBmcm9tICdkMyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vY2FydG9tYXAuZ2l0aHViLmlvL25sL3dnczg0L2dlbWVlbnRlXzIwMjAudG9wb2pzb24nKVxuICAgIC50aGVuKChyZXMpID0+IHJlcy5qc29uKCkpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0pO1xufVxuXG4iLCJpbXBvcnQgZDMgZnJvbSAnZDMnO1xuaW1wb3J0IHRvcG9qc29uIGZyb20gJ3RvcG9qc29uJztcbmltcG9ydCBubERhdGEgZnJvbSAnL25sdG9wby5qcyc7XG5cbmNvbnN0IGR1bW15ZGF0YSA9IHtcbiAgbGF0aXR1ZGU6ICc1Mi4wMDM5NDgyJyxcbiAgbG9uZ2l0dWRlOiAnNC40NDI2Mzk4J1xufVxuXG5jb25zb2xlLmxvZyhkdW1teWRhdGEubGF0aXR1ZGUpXG5cbm5sRGF0YSgpLnRoZW4oKGRhdGEpID0+IHtcbiAgY29uc3QgcGF0aCA9IGQzLmdlb1BhdGgoKTtcbiAgY29uc3Qgem9vbSA9IGQzLnpvb20oKS5zY2FsZUV4dGVudChbMSwgOF0pLm9uKCd6b29tJywgem9vbWVkKTtcbiAgXG4gIGNvbnN0IHdpZHRoID0gOTc1O1xuXHRjb25zdCBoZWlnaHQgPSA2MTA7XG5cblx0Y29uc3Qgc3ZnID0gZDMuc2VsZWN0KFwic3ZnXCIpXG4gICAgICAuYXR0cihcInZpZXdCb3hcIiwgWzAsIDAsIHdpZHRoLCBoZWlnaHRdKVxuICAgICAgLm9uKFwiY2xpY2tcIiwgcmVzZXQpO1xuXHRcbiAgXG4gIGNvbnN0IGcgPSBzdmcuYXBwZW5kKCdnJyk7XG5cbiAgY29uc3QgcHJvamVjdGlvbiA9IGQzLmdlb01lcmNhdG9yKCkuc2NhbGUoNjAwMCkuY2VudGVyKFs1LjExNjY2NywgNTIuMTddKTtcbiAgY29uc3QgcGF0aEdlbmVyYXRvciA9IHBhdGgucHJvamVjdGlvbihwcm9qZWN0aW9uKTtcblxuIGNvbnN0IGdlbWVlbnRlcyA9IGdcbiAgICAuYXBwZW5kKCdnJylcbiAgICAuYXR0cignZmlsbCcsICcjNDQ0JylcbiAgICAuYXR0cignY3Vyc29yJywgJ3BvaW50ZXInKVxuICAgIC5zZWxlY3RBbGwoJ3BhdGgnKVxuICAgIC5kYXRhKHRvcG9qc29uLmZlYXR1cmUoZGF0YSwgZGF0YS5vYmplY3RzLmdlbWVlbnRlXzIwMjApLmZlYXR1cmVzKVxuICAgIC5qb2luKCdwYXRoJylcbiAgICAub24oJ2NsaWNrJywgY2xpY2tlZClcbiAgICAuYXR0cignZCcsIHBhdGgpXG5cblxuXG4gIGdlbWVlbnRlcy5hcHBlbmQoJ2cnKVxuICBcdC5hdHRyKCd0cmFuc2Zvcm0nLCAoeyBsb25naXR1ZGUsIGxhdGl0dWRlIH0pID0+IGB0cmFuc2xhdGUoJHtwcm9qZWN0aW9uKFtsb25naXR1ZGUsIGxhdGl0dWRlXSkuam9pbihcIixcIil9KWApXG4gIFx0LmFwcGVuZCgnY2lyY2xlJylcbiAgXHQuYXR0cigncicsIDIpXG4gIFxuICBjb25zb2xlLmxvZyhnZW1lZW50ZXMpXG5cbiAgc3ZnLmNhbGwoem9vbSk7XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgZ2VtZWVudGVzLnRyYW5zaXRpb24oKS5zdHlsZSgnZmlsbCcsIG51bGwpO1xuICAgIHN2Z1xuICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgLmR1cmF0aW9uKDc1MClcbiAgICAgIC5jYWxsKFxuICAgICAgICB6b29tLnRyYW5zZm9ybSxcbiAgICAgICAgZDMuem9vbUlkZW50aXR5LFxuICAgICAgICBkMy56b29tVHJhbnNmb3JtKHN2Zy5ub2RlKCkpLmludmVydChbd2lkdGggLyAyLCBoZWlnaHQgLyAyXSlcbiAgICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjbGlja2VkKGV2ZW50LCBkKSB7XG4gICAgY29uc3QgW1t4MCwgeTBdLCBbeDEsIHkxXV0gPSBwYXRoLmJvdW5kcyhkKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBnZW1lZW50ZXMudHJhbnNpdGlvbigpLnN0eWxlKCdmaWxsJywgbnVsbCk7XG4gICAgZDMuc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5zdHlsZSgnZmlsbCcsICdyZWQnKTtcbiAgICBzdmdcbiAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgIC5kdXJhdGlvbig3NTApXG4gICAgICAuY2FsbChcbiAgICAgICAgem9vbS50cmFuc2Zvcm0sXG4gICAgICAgIGQzLnpvb21JZGVudGl0eVxuICAgICAgICAgIC50cmFuc2xhdGUod2lkdGggLyAyLCBoZWlnaHQgLyAyKVxuICAgICAgICAgIC5zY2FsZShcbiAgICAgICAgICAgIE1hdGgubWluKDgsIDAuOSAvIE1hdGgubWF4KCh4MSAtIHgwKSAvIHdpZHRoLCAoeTEgLSB5MCkgLyBoZWlnaHQpKVxuICAgICAgICAgIClcbiAgICAgICAgICAudHJhbnNsYXRlKC0oeDAgKyB4MSkgLyAyLCAtKHkwICsgeTEpIC8gMiksXG4gICAgICAgIGQzLnBvaW50ZXIoZXZlbnQsIHN2Zy5ub2RlKCkpXG4gICAgICApO1xuICB9XG5cbiAgZnVuY3Rpb24gem9vbWVkKGV2ZW50KSB7XG4gICAgY29uc3QgeyB0cmFuc2Zvcm0gfSA9IGV2ZW50O1xuICAgIGcuYXR0cigndHJhbnNmb3JtJywgdHJhbnNmb3JtKTtcbiAgICBnLmF0dHIoJ3N0cm9rZS13aWR0aCcsIDEgLyB0cmFuc2Zvcm0uayk7XG4gIH1cbn0pOyJdLCJuYW1lcyI6WyJkMyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0VBR2UsbUJBQVk7RUFDM0IsRUFBRSxPQUFPLEtBQUssQ0FBQyw0REFBNEQsQ0FBQztFQUM1RSxLQUFLLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7RUFDOUIsS0FBSyxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUs7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